import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the climbingLeaderboard function below.
    static int[] climbingLeaderboard(int[] scores, int[] alice) {
        int[] rankings = new int[scores.length];
        int place = 1;
        rankings[0]=1;
        int [] ans = new int[alice.length];
        for (int x =1; x<scores.length;x++){
            if (scores[x]==scores[x-1])
            rankings[x]=place;
            else{
                place++;
                rankings[x]=place;
            }
        }
        for (int y =0; y<alice.length;y++){
        for (int x =0; x<scores.length;x++){
        if (alice[y]>scores[0]){
        ans[y]=1;
        break;
        }
        else if (alice[y]<scores[scores.length-1]){
        ans[y]=rankings[rankings.length-1]+1;
        break;
        }
        else if (alice[y]==scores[x]){
            ans[y]=rankings[x];
            break;
        }
        else if (alice[y]<scores[x] && alice[y]>scores[x+1]){
            ans[y]=rankings[x]+1;
            break;
                }        
            }
        }
        return ans;

    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int scoresCount = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] scores = new int[scoresCount];

        String[] scoresItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < scoresCount; i++) {
            int scoresItem = Integer.parseInt(scoresItems[i]);
            scores[i] = scoresItem;
        }

        int aliceCount = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] alice = new int[aliceCount];

        String[] aliceItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < aliceCount; i++) {
            int aliceItem = Integer.parseInt(aliceItems[i]);
            alice[i] = aliceItem;
        }

        int[] result = climbingLeaderboard(scores, alice);

        for (int i = 0; i < result.length; i++) {
            bufferedWriter.write(String.valueOf(result[i]));

            if (i != result.length - 1) {
                bufferedWriter.write("\n");
            }
        }

        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
